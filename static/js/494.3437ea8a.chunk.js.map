{"version":3,"file":"static/js/494.3437ea8a.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook.module.css?8f1e","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__b90CW\",\"form_container\":\"Phonebook_form_container__AkqPG\",\"input_field\":\"Phonebook_input_field__G4jxo\",\"add_contact_button\":\"Phonebook_add_contact_button__0GvX8\",\"contact_item\":\"Phonebook_contact_item__x9N-f\",\"name\":\"Phonebook_name__hiPGu\",\"phone\":\"Phonebook_phone__EwO-0\",\"delete_button\":\"Phonebook_delete_button__izKOM\"};","export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '..//../redux/operations'; \nimport styles from './/../Phonebook.module.css'\nimport { selectContacts } from 'redux/selectors';\n\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const formatPhoneNumber = (phoneNumber) => {\n  const cleaned = phoneNumber.replace(/\\D/g, '');\n  const formatted = cleaned.substring(0, 10);\n  const regex = /^(\\d{3})(\\d{3})(\\d{4})$/;\n  const formattedNumber = formatted.replace(regex, '$1-$2-$3');\n  return formattedNumber;\n};\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'phone') {\n      const formattedPhone = formatPhoneNumber(value);\n      setFormData({ ...formData, [name]: formattedPhone });\n    } else {\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n  e.preventDefault();\n\n  const { name, phone } = formData;\n  const digitsCount = phone.replace(/\\D/g, '').length;\n\n  if (name.trim() === '' || phone.trim() === '') {\n    alert('Please fill in all fields');\n    return;\n  }\n\n  if (digitsCount < 10) {\n    alert('Phone number must contain at least 10 digits');\n    return;\n  }\n\n  if (contacts.some((contact) => contact.name === name)) {\n    alert(`${name} is already in your contacts`);\n    return;\n  }\n\n  dispatch(\n    addContact({\n      id: nanoid(),\n      name,\n      phone,\n    })\n  );\n\n  setFormData({ name: '', phone: '' });\n};\n\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form_container}>\n      \n        <h3>Name</h3>\n        <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={formData.name}\n        onChange={handleChange}\n        className={styles.input_field}\n      />\n           \n        <h3>Number</h3>\n        <input\n        type=\"tel\"\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +. Minimum 10 digits required.\"\n        required\n        value={formData.phone}\n        onChange={handleChange}\n        className={styles.input_field}\n      />\n      \n      <button type=\"submit\" className={styles.add_contact_button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport styles from '../Phonebook.module.css';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter); \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts()); \n  }, [dispatch]);\n\n  const filteredContacts = contacts\n  ? contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter ? filter.toLowerCase() : \"\")\n    )\n    : [];\n  \n  \n  return (\n    <ul>\n  {filteredContacts.map((contact) => (\n    <li key={contact.id} className={styles.contact_item}>\n      <p className={styles.name}><strong >Name:</strong> {contact.name}, <br /></p>\n      <p className={styles.phone}><strong >Number:</strong> {contact.phone}</p>\n      <button onClick={() => dispatch(deleteContact(contact.id))} className={styles.delete_button}>\n        Delete\n      </button>\n    </li>\n  ))}\n</ul>\n\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/filterSlice'; \nimport styles from '../Phonebook.module.css';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter); \n  const dispatch = useDispatch();\n\n  const handleFilterChange = (e) => {\n    dispatch(updateFilter(e.target.value));\n  };\n\n  return (\n    <div className={styles.form_container}>\n      <label>\n        Find contacts by name:\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={handleFilterChange}\n          className={styles.input_field}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm.jsx';\nimport ContactList from '../components/ContactList/ContactList.jsx';\nimport Filter from '../components/Filter/Filter.jsx';\n\nconst ContactsPage = () => {\n    return (\n        <div>\n            <h2>Контакты</h2>\n            <ContactForm />\n            <h3>Список контактов</h3>\n            <Filter />\n            <ContactList />\n        </div>\n    );\n};\n\nexport default ContactsPage;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectFilter","state","filter","selectContacts","contacts","items","dispatch","useDispatch","useSelector","useState","name","phone","formData","setFormData","handleChange","e","target","value","formattedPhone","replace","substring","onSubmit","preventDefault","digitsCount","length","trim","alert","some","contact","addContact","className","styles","type","pattern","title","required","onChange","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","map","onClick","deleteContact","updateFilter"],"sourceRoot":""}